version: '3'

services:
  react-app:
    build:
      context: ./frontend
    image: johnpennyman/react-app:1.1
    container_name: movies-react-app-1
    ports:
      - "5173:5173"
    networks:
      - app-network
    depends_on:
      - backend
  
  backend:
    build: ./backend
    image: johnpennyman/backend:1.1
    container_name: movies-backend-1
    ports:
      - "8000:8000"
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/code
    environment:
      - DB_NAME=movies
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_HOST=db
      - DB_PORT=5432
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: movies
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: